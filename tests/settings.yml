# OneMod settings
input_path: /path/to/input/data.parquet
col_id: [age_group_id, location_id, sex_id, year_id]
age_group_id: [8, 9, 10, 11, 12]
location_id: [13, 14, 15, 16, 17]
sex_id: [1, 2]
year_id: [1980, 1981, 1982, 1983, 1984, 1985]
col_obs: obs_rate
col_pred: pred_rate
col_sigma: 'standard_error'
col_holdout: [holdout1, holdout2, holdout3, holdout4, holdout7]
col_test: test
max_attempts: 1

rover_covsel:
  groupby: [age_group_id, sex_id]
  model_type: binomial
  cov_fixed: [intercept]
  cov_exploring: [cov1, cov2, cov3, cov4, cov5]
  weights: population
  holdouts: [holdout1, holdout2, holdout3, holdout4, holdout7]
  fit_args:
    strategies: [forward]
    top_pct_score: 1.0
    top_pct_learner: 0.5

# Regmod smooth settings
regmod_smooth:
  model_type: binomial
  obs: obs_rate
  var_groups:
    # Intercept relisted multiple times,
    # Could compress, list different dimensions/priors as sub keys
    - col: "intercept"
    - col: "intercept"
      dim: "super_region_id"
      gprior: [0, 0.35]
    - col: "intercept"
      dim: "region_id"
      gprior: [0, 0.18]
    - col: "intercept"
      dim: "location_id"
      gprior: [0, 0.09]
  weights: population
  coef_bounds:
    LDI_pc: [-inf, 0]
    education_yrs_pc: [-inf, 0]
    lpc: [0, inf]
    mean_BMI: [0, inf]
    mean_SBP: [0, inf]
    mean_cholesterol: [0, inf]
    smoking_prev: [0, inf]
    universal_health_coverage": [inf, 0]
  dims:
    - name: "age_mid"
      type: "numerical"
    - name: "super_region_id"
      type: "categorical"
    - name: "region_id"
      type: "categorical"
    - name: "location_id"
      type: "categorical"
  fit_args:
    options:
      verbose: false
      m_scale: 0.1

# SWiMR settings
swimr:
  max_attempts: 1
  singularity_image: /ihme/singularity-images/rstudio/ihme_rstudio_4201.img
  age_metadata: /mnt/team/msca/priv/projects/openmod/data/age_metadata.csv
  swimr_parentdir: /ihme/scratch/users/rsoren/projects/swimr_dev_tmp/
  conda_binary: /ihme/code/mscm/miniconda3/bin/conda
  conda_env: mrtool_0.0.2
  models:
    model1:
      model_type: noncascade
      groupby: [age_group_id, sex_id]
      similarity_matrix: [/path/to/similarity_matrix1.parquet, /path/to/similarity_matrix2.parquet]
      similarity_multiplier: [0.01, 0.1, 1]
      use_similarity_matrix: [0, 1]
      n_internal_knots_year: [2, 3, 4]
      n_internal_knots_age: .na
      theta: .na
      intercept_theta: .na
      ranef_variable: loc__tmp
      gamma_uprior_lower: 0
      gamma_uprior_upper: 0
      overwrite: 1
      save_input_data: 0
      save_fitted_models: 0
      save_similarity_matrix: 0
    model2:
      model_type: cascade
      cascade_levels: age__tmp,locid
      cascade_hierarchy_csv_path: /path/to/cascade_hierarchy.csv
      groupby: sex_id
      similarity_matrix: /path/to/similarity_matrix.parquet
      similarity_multiplier: 1
      use_similarity_matrix: 0
      n_internal_knots_year: 3
      n_internal_knots_age: .na
      theta: ['0.1,0.1', '1,1', '10,10']
      intercept_theta: ['0.1,0.1', '1,1', '10,10']
      ranef_variable: submodel_id__tmp
      gamma_uprior_lower: .na
      gamma_uprior_upper: .na
      overwrite: 1
      save_input_data: 0
      save_fitted_models: 0
      save_similarity_matrix: 0

# WeAve settings
weave:
  max_attempts: 1
  models:
    model1:
      max_batch: 5000
      groupby: [sex_id, super_region_id]
      dimensions:
        age:
          name: age_group_id
          coordinates: age_mid
          kernel: exponential
          radius: [0.75, 1, 1.25]
        year:
          name: year_id
          kernel: tricubic
          exponent: [0.5, 1, 1.5]
        location:
          name: location_id
          coordinates: [super_region_id, region_id, location_id]
          kernel: depth
          radius: [0.7, 0.8, 0.9]
    model2:
      groupby: [age_group_id, sex_id]
      dimensions:
        year:
          name: year_id
          kernel: tricubic
          exponent: [0.5, 1, 1.5]
        location:
          name: location_id
          kernel: identity
          distance: dictionary
          distance_dict: [/path/to/distance_dict1.parquet, /path/to/distance_dict2.parquet]

# Ensemble settings
ensemble:
  max_attempts: 1
  groupby: [sex_id, super_region_id]
  metric: rmse
  score: neg_exp
  top_pct_score: 1
  top_pct_model: 1
